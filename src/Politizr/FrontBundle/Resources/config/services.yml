# @todo supprimer l'injection du service_container

parameters:
    politizr.oauth_user_provider.class:   	Politizr\Security\User\Provider\OAuthUserProvider
    fos_elastica.elastica_to_model_transformer.collection.class:  Politizr\FrontBundle\Lib\ElasticSearch\ElasticaToModelTransformerPropelCollection

services:
    # CONNEXION
    hwi_oauth.user.provider.entity:
        class:                              HWI\Bundle\OAuthBundle\Security\Core\User\OAuthUserProvider

    politizr.login_user_provider:
        class: 								Politizr\Security\User\Provider\PUserProvider

    politizr.oauth_user_provider:
        class: 								"%politizr.oauth_user_provider.class%"
        arguments: 							[ @service_container ]


    # SERVICES UTILITAIRES
    politizr.utils:
        class:                              Politizr\FrontBundle\Lib\Utils\UtilsManager
        arguments:                          [ @service_container ]


    # SERVICES ROUTING
    politizr.routing.xhr:
        class:                              Politizr\FrontBundle\Lib\Routing\XhrCreateResponse
        arguments:                          [ @service_container ]


    # SERVICES MÉTIERS
    politizr.functional.document:
        class:                              Politizr\FrontBundle\Lib\Functional\DocumentService
        arguments:                          [ @service_container ]

    politizr.functional.security:
        class:                              Politizr\FrontBundle\Lib\Functional\SecurityService
        arguments:                          [ @service_container ]

    politizr.functional.timeline:
        class:                              Politizr\FrontBundle\Lib\Functional\TimelineService
        arguments:                          [ @service_container ]


    # XHR SERVICES
    politizr.xhr.document:
        class:                              Politizr\FrontBundle\Lib\Xhr\XhrDocument
        arguments:                          [ @service_container ]

    politizr.xhr.modal:
        class:                              Politizr\FrontBundle\Lib\Xhr\XhrModal
        arguments:                          [ @service_container ]

    politizr.xhr.security:
        class:                              Politizr\FrontBundle\Lib\Xhr\XhrSecurity
        arguments:                          [ @service_container ]

    politizr.xhr.user:
        class:                              Politizr\FrontBundle\Lib\Xhr\XhrUser
        arguments:                          [ @service_container ]

    politizr.xhr.notification:
        class:                              Politizr\FrontBundle\Lib\Xhr\XhrNotification
        arguments:                          [ @service_container ]

    politizr.xhr.tag:
        class:                              Politizr\FrontBundle\Lib\Xhr\XhrTag
        arguments:                          [ @service_container ]

    politizr.xhr.timeline:
        class:                              Politizr\FrontBundle\Lib\Xhr\XhrTimeline
        arguments:                          [ @service_container ]

    politizr.xhr.search:
        class:                              Politizr\FrontBundle\Lib\Xhr\XhrSearch
        arguments:                          [ @service_container ]


    # DB MANAGER SERVICES
    politizr.manager.user:
        class:                              Politizr\FrontBundle\Lib\Manager\UserManager
        arguments:                          [ @service_container ]

    politizr.manager.document:
        class:                              Politizr\FrontBundle\Lib\Manager\DocumentManager
        arguments:                          [ @service_container ]

    politizr.manager.tag:
        class:                              Politizr\FrontBundle\Lib\Manager\TagManager
        arguments:                          [ @service_container ]

    politizr.manager.qualification:
        class:                              Politizr\FrontBundle\Lib\Manager\QualificationManager
        arguments:                          [ @service_container ]

    politizr.manager.reputation:
        class:                              Politizr\FrontBundle\Lib\Manager\ReputationManager
        arguments:                          [ @service_container ]

    politizr.manager.order:
        class:                              Politizr\FrontBundle\Lib\Manager\OrderManager
        arguments:                          [ @service_container ]

    politizr.manager.notification:
        class:                              Politizr\FrontBundle\Lib\Manager\NotificationManager
        arguments:                          [ @service_container ]


    # LISTENERS
    politzr.listener.email:
        class:      Politizr\FrontBundle\Listener\EmailListener
        arguments:  [ @mailer, @templating, @logger, "%contact_email%", "%noreply_email%" ]
        tags:
            - { name: kernel.event_listener, event: lost_password_email }
            - { name: kernel.event_listener, event: upd_password_email }
            - { name: kernel.event_listener, event: notification_email }

    politzr.listener.notification:
        class:      Politizr\FrontBundle\Listener\NotificationListener
        arguments:  [ @logger, @event_dispatcher ]
        tags:
            - { name: kernel.event_listener, event: n_note_pos }
            - { name: kernel.event_listener, event: n_note_neg }
            - { name: kernel.event_listener, event: n_debate_publish }
            - { name: kernel.event_listener, event: n_reaction_publish }
            - { name: kernel.event_listener, event: n_comment_publish }
            - { name: kernel.event_listener, event: n_debate_follow }
            - { name: kernel.event_listener, event: n_user_follow }
            - { name: kernel.event_listener, event: n_badge_win }

    politzr.listener.notification_email:
        class:      Politizr\FrontBundle\Listener\NotificationEmailListener
        arguments:  [ @logger, @event_dispatcher ]
        tags:
            - { name: kernel.event_listener, event: n_e_check }

    politzr.listener.reputation:
        class:      Politizr\FrontBundle\Listener\ReputationListener
        arguments:  [ @logger, @event_dispatcher ]
        tags:
            - { name: kernel.event_listener, event: r_debate_publish }
            - { name: kernel.event_listener, event: r_reaction_publish }
            - { name: kernel.event_listener, event: r_comment_publish }
            - { name: kernel.event_listener, event: r_note_pos }
            - { name: kernel.event_listener, event: r_note_neg }
            - { name: kernel.event_listener, event: r_debate_follow }
            - { name: kernel.event_listener, event: r_debate_unfollow }
            - { name: kernel.event_listener, event: r_user_follow }
            - { name: kernel.event_listener, event: r_user_unfollow }

    politzr.listener.badge:
        class:      Politizr\FrontBundle\Listener\BadgeListener
        arguments:  [ @logger, @event_dispatcher ]
        tags:
            - { name: kernel.event_listener, event: b_reaction_publish }
            - { name: kernel.event_listener, event: b_document_note_pos }
            - { name: kernel.event_listener, event: b_document_note_neg }
            - { name: kernel.event_listener, event: b_comment_publish }
            - { name: kernel.event_listener, event: b_comment_note_pos }
            - { name: kernel.event_listener, event: b_comment_note_neg }
            - { name: kernel.event_listener, event: b_user_follow }

    politizr.user.activity:
        class:      Politizr\FrontBundle\Listener\ActivityListener
        arguments:  [ @security.context ]
        tags:
            - { name: kernel.event_listener, event: kernel.controller, method: onCoreController }

    # EXTENSIONS TWIG
    politzr.twig.tag:
        class:                              Politizr\FrontBundle\Twig\PolitizrTagExtension
        arguments:                          [ @service_container ]
        tags:
                                            - { name: twig.extension }

    politzr.twig.document:
        class:                              Politizr\FrontBundle\Twig\PolitizrDocumentExtension
        arguments:                          [ @service_container ]
        tags:
                                            - { name: twig.extension }

    politzr.twig.user:
        class:                              Politizr\FrontBundle\Twig\PolitizrUserExtension
        arguments:                          [ @service_container ]
        tags:
                                            - { name: twig.extension }

    politzr.twig.reputation:
        class:                              Politizr\FrontBundle\Twig\PolitizrReputationExtension
        arguments:                          [ @service_container ]
        tags:
                                            - { name: twig.extension }

#     # FOS ELASTICA
#     politzr.provider.p_document:
#         class: Politizr\FrontBundle\Lib\ElasticSearch\Provider\PDocumentProvider
#         arguments:
#             - @fos_elastica.index.politizr.p_document
#             - @logger
#             - @fos_elastica.object_persister.politizr.p_document
#         tags:
#             - { name: fos_elastica.provider, index: politizr, type: p_document }
