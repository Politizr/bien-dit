<!-- TinyMCE V4 Configuration -->
<script src="{{ asset("bundles/politizradmin/js/tinymce_v4/jquery.tinymce.min.js") }}"></script>

<script type="text/javascript">
    // Initializes all textareas with the tinymce class
    var tinyMceAttr = {
          script_url : '{{ asset("bundles/politizradmin/js/tinymce_v4/tinymce.min.js") }}',
          theme : "modern",
          language : "fr_FR",
          width : 800,
          height : 100,
          plugins : "link",
          toolbar: "undo redo | bold italic | link",
          menu: {
            edit: {title: 'Edit', items: 'undo redo | cut copy paste'},
            insert: {title: 'Insert', items: 'link'},
            format: {title: 'Format', items: 'bold italic'},
          },
          paste_as_text: false,
          paste_data_images: true,
          convert_urls: false,
          relatives_urls: false,
          branding: false,
          max_chars: 250, // max. allowed chars
          setup: function (ed) {
              var allowedKeys = [8, 37, 38, 39, 40, 46]; // backspace, delete and cursor keys
              ed.on('keydown', function (e) {
                  if (allowedKeys.indexOf(e.keyCode) != -1) return true;
                  if (tinymce_getContentLength() + 1 > this.settings.max_chars) {
                      e.preventDefault();
                      e.stopPropagation();
                      return false;
                  }
                  return true;
              });
              ed.on('keyup', function (e) {
                  tinymce_updateCharCounter(this, tinymce_getContentLength());
              });
          },
          init_instance_callback: function () { // initialize counter div
              $('#' + this.id).prev().append('<div class="char_count" style="text-align:right"></div>');
              tinymce_updateCharCounter(this, tinymce_getContentLength());
          },
          paste_preprocess: function (plugin, args) {
              var editor = tinymce.get(tinymce.activeEditor.id);
              var len = editor.contentDocument.body.innerText.length;
              var text = $(args.content).text();
              if (len + text.length > editor.settings.max_chars) {
                  alert('Pasting this exceeds the maximum allowed number of ' + editor.settings.max_chars + ' characters.');
                  args.content = '';
              } else {
                  tinymce_updateCharCounter(editor, len + text.length);
              }
          }
    };

    function tinymce_updateCharCounter(el, len) {
        $('#' + el.id).prev().find('.char_count').text(len + '/' + el.settings.max_chars);
    }

    function tinymce_getContentLength() {
        return tinymce.get(tinymce.activeEditor.id).contentDocument.body.innerText.length;
    }

    $().ready(function() {
       $('textarea.tinymce').tinymce(tinyMceAttr);
    });
</script>
